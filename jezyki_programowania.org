#+title: Jezyki Programowania

* jezyki programowania 1
** wymagania
+ linux
+ VS**** (zrobię żeby emacs działał)
+ sbt
*** wtyczki do VS****
+ Scala Syntax (official)
** właściwości
+ strongly typed - nie da wsadzać double do inta
+ może być parę main funkcji
  + przy kompilacji będzie się wybierać który main ma zostać wykonany
+ Unit zbytnio nic nie zwraca
** setup
sbt new wpug/scala3-sbt.g8
+ rozszerzenia .scala
** struktura startowa
#+begin_src scala
@main def mainProg: Unit = {
    println("Hello World!")
}
#+end_src
** start projektu
+ cd labXX
+ sbt - rozpocznie kompilacje
** polecenia sbt
+ compile - po kazdym compile wykonac reStart
+ reStart
    reStart {values}
+ reStop
+ reStatus
** funkcje
+ val
  #+begin_src scala
val napis = "Hello"
  #+end_src
+ function
  #+begin_src scala
def func_name(variable:type):Return_Unit {
    body
}
  #+end_src
+ println - print line
  #+begin_src scala
println("wiadomość")
  #+end_src
+ if
  #+begin_src scala
if ( condition ) {
    // true block
} else {
    // false block
}
  #+end_src
+ Random
  #+begin_src scala
val rand = scala.util.Random()
val liczba = rand.nextInt(100) //wygeneruje liczbę w zakresie 0-100
// można zapisać tak:
scala.util.Random().nextInt(100)
  #+end_src

* jezyki programowania 2
** informacje wstępne
*** potrzebne programy
+ nodejs
*** hasło
+ jp2_2@23
** javascript basics
*** zmienne
+ let - zmienna o zmiennym typie
+ const - niezmienna zmienna kek
*** funkcje
+ console.log() - print w konsoli
**** if
#+begin_src javascript
if ( condition ) {
    "do when true"
} else {
    "do when false"
}
#+end_src
**** for loop
#+begin_src javascript
for ( declare variable; condition; variable change ) {
    "do in loop"
}
*** informacje
+ język słabo typowany - zmienna nie mają stałego typu
+ średniki nie są potrzebne
+ porównuje się używając `===` aby porównać wartość i typ
